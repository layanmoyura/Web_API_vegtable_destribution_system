// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Online_platform_for_vegetables;

namespace Online_platform_for_vegetables.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Admin", b =>
                {
                    b.Property<int>("AdminID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Courier", b =>
                {
                    b.Property<string>("CourierID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vehicle_reg_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicle_contact_no")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourierID");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Living_City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Picture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Delivery", b =>
                {
                    b.Property<int>("DeliveryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("CourierID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<bool>("delivered_or_not")
                        .HasColumnType("bit");

                    b.Property<string>("from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("to")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryID");

                    b.HasIndex("AdminID");

                    b.HasIndex("CourierID");

                    b.HasIndex("OrderID");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Farmer", b =>
                {
                    b.Property<int>("FarmerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Account_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Living_city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone_or_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profile_Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ratings")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FarmerID");

                    b.ToTable("Farmers");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Deadline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FarmerID")
                        .HasColumnType("int");

                    b.Property<int?>("VegetableStocksID")
                        .HasColumnType("int");

                    b.Property<int>("progress")
                        .HasColumnType("int");

                    b.Property<double>("required_amount_kg")
                        .HasColumnType("float");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FarmerID");

                    b.HasIndex("VegetableStocksID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Payment", b =>
                {
                    b.Property<int>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Card_type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FarmerID")
                        .HasColumnType("int");

                    b.Property<string>("Farmers_acc_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("PaymentID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("FarmerID");

                    b.HasIndex("OrderID");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.VegetableStocks", b =>
                {
                    b.Property<int>("VegetableStocksID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount_kg")
                        .HasColumnType("float");

                    b.Property<int?>("FarmerID")
                        .HasColumnType("int");

                    b.Property<double>("Farmers_price_per_kg_Rs")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated_Time")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VegetablesID")
                        .HasColumnType("int");

                    b.HasKey("VegetableStocksID");

                    b.HasIndex("FarmerID");

                    b.HasIndex("VegetablesID");

                    b.ToTable("VegetableStocks");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Vegetables", b =>
                {
                    b.Property<int>("VegetablesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Max_control_price_Rs")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Updated_AdminAdminID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vegtable_image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VegetablesID");

                    b.HasIndex("Updated_AdminAdminID");

                    b.ToTable("Vegetables");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Delivery", b =>
                {
                    b.HasOne("Online_platform_for_vegetables.Model.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminID");

                    b.HasOne("Online_platform_for_vegetables.Model.Courier", "Courier")
                        .WithMany()
                        .HasForeignKey("CourierID");

                    b.HasOne("Online_platform_for_vegetables.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Admin");

                    b.Navigation("Courier");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Order", b =>
                {
                    b.HasOne("Online_platform_for_vegetables.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("Online_platform_for_vegetables.Model.Farmer", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerID");

                    b.HasOne("Online_platform_for_vegetables.Model.VegetableStocks", "vegetableStock")
                        .WithMany()
                        .HasForeignKey("VegetableStocksID");

                    b.Navigation("Customer");

                    b.Navigation("Farmer");

                    b.Navigation("vegetableStock");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Payment", b =>
                {
                    b.HasOne("Online_platform_for_vegetables.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("Online_platform_for_vegetables.Model.Farmer", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerID");

                    b.HasOne("Online_platform_for_vegetables.Model.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID");

                    b.Navigation("Customer");

                    b.Navigation("Farmer");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.VegetableStocks", b =>
                {
                    b.HasOne("Online_platform_for_vegetables.Model.Farmer", "Farmer")
                        .WithMany()
                        .HasForeignKey("FarmerID");

                    b.HasOne("Online_platform_for_vegetables.Model.Vegetables", "vegetable")
                        .WithMany()
                        .HasForeignKey("VegetablesID");

                    b.Navigation("Farmer");

                    b.Navigation("vegetable");
                });

            modelBuilder.Entity("Online_platform_for_vegetables.Model.Vegetables", b =>
                {
                    b.HasOne("Online_platform_for_vegetables.Model.Admin", "Updated_Admin")
                        .WithMany()
                        .HasForeignKey("Updated_AdminAdminID");

                    b.Navigation("Updated_Admin");
                });
#pragma warning restore 612, 618
        }
    }
}
